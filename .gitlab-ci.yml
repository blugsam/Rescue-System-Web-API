stages:
  - build
  - deploy

build-api:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE/api:latest -f src/RescueSystem.Api/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/api:latest
  only:
    - main

deploy-to-vps:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk update && apk add openssh-client docker-compose
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - scp docker-compose.yml your_user@your_vps_ip:~/docker-compose.yml
    - ssh your_user@your_vps_ip "
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
        docker pull $CI_REGISTRY_IMAGE/api:latest &&
        docker-compose down &&
        docker-compose up -d"
  only:
    - main